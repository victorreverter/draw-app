{"version":3,"sources":["components/Placement.js","components/SortFunction.js","App.js","serviceWorker.js","index.js"],"names":["Placement","props","className","onClick","handleRemove","name","handleSvgRemove","height","viewBox","width","xmlns","d","SortFunc","useState","setName","placement","setPlacement","sortRslt","setSortRslt","elem","newArr","filter","plc","target","innerText","console","log","parentElement","parentElem","itemElemText","children","loadPlc","map","plcIndex","key","id","enable-background","fill","type","onChange","value","onKeyDown","e","undefined","concat","document","getElementById","arrLength","length","arrSort","Math","floor","random","App","SortFunction","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.fa4e56f9.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Placement(props) {\r\n\r\n//   const handleSVG = () => {\r\n//       console.log('SVG was clicked');\r\n//   }\r\n\r\n//   const handleSVG = props.handleRemove;\r\n\r\n  return (\r\n    <div className=\"item-box\">\r\n      <p onClick={props.handleRemove}>{props.name}</p>\r\n      <div className=\"close-icon\" onClick={props.handleSvgRemove}>\r\n          <svg height=\"20px\" viewBox=\"0 0 365.696 365.696\" width=\"20px\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m243.1875 182.859375 113.132812-113.132813c12.5-12.5 12.5-32.765624 0-45.246093l-15.082031-15.082031c-12.503906-12.503907-32.769531-12.503907-45.25 0l-113.128906 113.128906-113.132813-113.152344c-12.5-12.5-32.765624-12.5-45.246093 0l-15.105469 15.082031c-12.5 12.503907-12.5 32.769531 0 45.25l113.152344 113.152344-113.128906 113.128906c-12.503907 12.503907-12.503907 32.769531 0 45.25l15.082031 15.082031c12.5 12.5 32.765625 12.5 45.246093 0l113.132813-113.132812 113.128906 113.132812c12.503907 12.5 32.769531 12.5 45.25 0l15.082031-15.082031c12.5-12.503906 12.5-32.769531 0-45.25zm0 0\"/></svg>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Placement;","import React, { useState } from \"react\";\r\nimport Placement from \"./Placement\";\r\n\r\nimport \"../sort-styles.css\";\r\n\r\nfunction SortFunc() {\r\n  const [name, setName] = useState(\"\");\r\n  const [placement, setPlacement] = useState([]);\r\n  const [sortRslt, setSortRslt] = useState(\"\");\r\n\r\n  const handleChange = elem => {\r\n    setName({\r\n      name: elem.target.value\r\n    });\r\n    // console.log(elem.target.value);\r\n    // console.log(name);\r\n    // console.log(name.value);\r\n  };\r\n\r\n  const handleKeyDown = e => {\r\n    if (e.key === \"Enter\") {\r\n      if (name.name !== undefined && name.name !== \"\") {\r\n        setPlacement(placement.concat(name.name));\r\n        setName({ name: \"\" });\r\n        // console.log(this.state.placement);\r\n\r\n        const plcVal = document.getElementById(\"plcInput\");\r\n        plcVal.value = \"\";\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleClick = () => {\r\n    if (name.name !== undefined && name.name !== \"\") {\r\n      setPlacement(placement.concat(name.name));\r\n      setName({ name: \"\" });\r\n\r\n      // console.log(name);\r\n      // console.log(name.name);\r\n      // console.log(placement);\r\n      // console.log(placement.placement);\r\n\r\n      const plcVal = document.getElementById(\"plcInput\");\r\n      plcVal.value = \"\";\r\n    }\r\n  };\r\n\r\n  const handleDraw = () => {\r\n    const arrLength = placement.length;\r\n    const arrSort = Math.floor(Math.random() * arrLength);\r\n\r\n    // console.log(arrLength);\r\n    // console.log(placement[arrSort]);\r\n\r\n    setSortRslt({\r\n      sortRslt: placement[arrSort]\r\n    });\r\n\r\n    // console.log(sortRslt);\r\n    // console.log(sortRslt.sortRslt);\r\n  };\r\n\r\n  const handleReload = () => {\r\n    setName(\"\");\r\n    setPlacement([]);\r\n    setSortRslt(\"\");\r\n  };\r\n\r\n  const handleRemove = elem => {\r\n    // console.log(placement);\r\n    // console.log(placement.placement);\r\n    // console.log(elem.target);\r\n    // console.log(elem.target.innerText);\r\n    // console.log(\"--------- a breaker ---------\");\r\n\r\n    var newArr = placement.filter(plc => {\r\n      // console.log(plc);\r\n      return plc !== elem.target.innerText;\r\n    });\r\n    console.log(newArr);\r\n\r\n    setPlacement(newArr);\r\n  };\r\n\r\n//   const myItemText = useRef();\r\n//   useEffect(() => myInput.current && myInput.current.focus());\r\n\r\n  const handleSvgRemove = elem => {\r\n    // console.log(elem.target.parentElement);\r\n    // console.log(elem.target.parentElement.parentElement);\r\n    console.log(elem.target.parentElement.parentElement.parentElement);\r\n\r\n    const parentElem = elem.target.parentElement.parentElement.parentElement;\r\n    const itemElem = parentElem.children[0];\r\n    const itemElemText = itemElem.innerText;\r\n    \r\n    // console.log(parentElem.children);\r\n    // console.log(parentElem.children.children);\r\n    // console.log(parentElem.children[0]);\r\n    console.log(parentElem.children[0].innerText);\r\n   \r\n    // Same cleaner except in this case we go through\r\n    // the nodes to access the paragraph inner Text\r\n\r\n    var newArr = placement.filter(plc => {\r\n        // console.log(plc);\r\n        return plc !== itemElemText;\r\n    });\r\n    console.log(newArr);\r\n\r\n    setPlacement(newArr);\r\n  };\r\n\r\n  const loadPlc = placement.map((plc, plcIndex) => (\r\n    <Placement key={plcIndex} name={plc} handleRemove={handleRemove} handleSvgRemove={handleSvgRemove} />\r\n  ));\r\n\r\n  return (\r\n    <div className=\"foodie-container\">\r\n      <div className=\"header-container\">\r\n        <div>\r\n            <svg id=\"Capa_1\" enable-background=\"new 0 0 510.967 510.967\" height=\"20px\" viewBox=\"0 0 510.967 510.967\" width=\"20px\" xmlns=\"http://www.w3.org/2000/svg\"><g><g><path d=\"m474.301 364.391v-217.816c0-10.784-5.753-20.748-15.092-26.14l-188.634-108.908c-9.339-5.392-20.845-5.392-30.184 0l-188.634 108.908c-9.339 5.392-15.092 15.356-15.092 26.14v217.816c0 10.784 5.753 20.748 15.092 26.14l188.635 108.908c9.339 5.392 20.845 5.392 30.184 0l188.634-108.908c9.339-5.392 15.091-15.356 15.091-26.14z\" fill=\"#ff4755\"/><path d=\"m459.21 372.531-188.635 108.908c-9.339 5.392-20.845 5.392-30.184 0l-188.634-108.908c-9.339-5.392-15.092-15.356-15.092-26.14v18c0 10.784 5.753 20.748 15.092 26.14l188.635 108.908c9.339 5.392 20.845 5.392 30.184 0l188.634-108.908c9.339-5.392 15.092-15.356 15.092-26.14v-18c-.001 10.784-5.753 20.748-15.092 26.14z\" fill=\"#fc2b3a\"/><path d=\"m434.272 358.707v-206.448l-178.789-103.223-178.789 103.223v206.448l178.789 103.224z\" fill=\"#fff5f5\"/><path d=\"m76.694 340.707v18l178.789 103.224 178.789-103.224v-18l-176.289 101.78c-1.547.893-3.453.893-5 0z\" fill=\"#efe2dd\"/><path d=\"m274.042 150.296 18.907 38.31c3.015 6.108 8.842 10.342 15.583 11.322l42.277 6.143c16.975 2.467 23.753 23.327 11.47 35.301l-30.592 29.82c-4.878 4.755-7.103 11.605-5.952 18.319l7.222 42.106c2.9 16.906-14.846 29.799-30.029 21.817l-37.814-19.88c-6.029-3.17-13.232-3.17-19.261 0l-37.814 19.88c-15.183 7.982-32.928-4.91-30.029-21.817l7.222-42.106c1.151-6.714-1.074-13.564-5.952-18.319l-30.592-29.82c-12.283-11.973-5.505-32.834 11.47-35.301l42.277-6.143c6.741-.98 12.568-5.213 15.583-11.322l18.907-38.31c7.591-15.383 29.526-15.383 37.117 0z\" fill=\"#ffcb5b\"/><g><path d=\"m253.157 311.713-70.36 36.991c5.92 6.734 16.047 9.564 25.242 4.729l37.814-19.88c6.029-3.17 13.232-3.17 19.261 0l37.814 19.88c9.195 4.834 19.323 2.005 25.242-4.729l-70.36-36.991c-1.457-.766-3.197-.766-4.653 0z\" fill=\"#f7b737\"/></g></g><g><path d=\"m312.585 363.34c-4.482.001-8.985-1.08-13.148-3.268l-37.814-19.88c-3.845-2.021-8.436-2.021-12.28 0l-37.814 19.88c-9.57 5.031-20.948 4.208-29.694-2.147-8.747-6.354-13.044-16.921-11.217-27.576l7.222-42.106c.734-4.282-.685-8.648-3.795-11.681l-30.591-29.819c-7.742-7.547-10.476-18.622-7.135-28.904s12.062-17.635 22.761-19.189l42.277-6.143c4.299-.625 8.013-3.323 9.936-7.219l18.907-38.309c4.785-9.694 14.473-15.717 25.284-15.717s20.499 6.022 25.284 15.717l18.907 38.309c1.922 3.896 5.637 6.594 9.936 7.219l42.277 6.143c10.699 1.555 19.42 8.907 22.761 19.189s.607 21.357-7.134 28.903l-30.592 29.82c-3.11 3.032-4.529 7.398-3.795 11.681.7 4.082-2.042 7.96-6.125 8.659-4.079.704-7.96-2.042-8.66-6.124-1.569-9.148 1.462-18.479 8.109-24.957l30.592-29.821c3.678-3.585 4.926-8.642 3.339-13.527s-5.569-8.241-10.652-8.98l-42.277-6.144c-9.185-1.335-17.122-7.101-21.229-15.424l-18.907-38.31c-2.273-4.605-6.697-7.355-11.833-7.355s-9.56 2.75-11.833 7.355l-18.907 38.31c-4.108 8.323-12.044 14.089-21.23 15.424l-42.277 6.144c-5.083.739-9.065 4.096-10.652 8.98-1.587 4.886-.339 9.942 3.339 13.528l30.591 29.818c6.647 6.479 9.678 15.81 8.109 24.958l-7.222 42.107c-.868 5.063 1.094 9.887 5.249 12.906 4.156 3.018 9.35 3.394 13.897 1.004l37.814-19.88c8.216-4.318 18.025-4.32 26.241 0l37.814 19.88c4.546 2.39 9.742 2.016 13.897-1.004s6.117-7.844 5.249-12.906l-2.149-12.529c-.7-4.082 2.042-7.959 6.125-8.659 4.079-.707 7.96 2.041 8.66 6.124l2.149 12.529c1.828 10.655-2.47 21.222-11.217 27.576-4.942 3.59-10.725 5.415-16.547 5.415z\"/><path d=\"m255.483 510.967c-6.516 0-13.031-1.677-18.842-5.032l-188.634-108.909c-11.621-6.709-18.841-19.215-18.841-32.635v-217.816c0-13.42 7.22-25.926 18.841-32.635l188.635-108.908c11.623-6.709 26.063-6.71 37.684 0l188.634 108.908c11.622 6.71 18.841 19.215 18.841 32.635v217.816c0 13.42-7.22 25.925-18.841 32.635l-79.88 46.118c-3.587 2.069-8.173.843-10.245-2.745-2.071-3.587-.842-8.174 2.745-10.245l79.88-46.118c6.996-4.039 11.341-11.566 11.341-19.645v-217.816c0-8.078-4.346-15.605-11.341-19.645l-188.635-108.908c-6.996-4.039-15.687-4.039-22.684 0l-188.634 108.909c-6.996 4.039-11.341 11.566-11.341 19.645v217.816c0 8.078 4.346 15.605 11.341 19.645l188.635 108.908c6.996 4.039 15.688 4.039 22.684 0l82.774-47.789c3.587-2.07 8.174-.842 10.245 2.745s.842 8.174-2.745 10.245l-82.774 47.789c-5.812 3.354-12.328 5.032-18.843 5.032z\"/><path d=\"m255.483 469.431c-1.295 0-2.59-.335-3.75-1.005l-178.789-103.224c-2.32-1.34-3.75-3.815-3.75-6.495v-206.447c0-2.68 1.43-5.155 3.75-6.495l82.08-47.389c3.587-2.07 8.174-.843 10.245 2.745 2.071 3.587.842 8.174-2.745 10.245l-78.33 45.224v197.787l171.289 98.893 171.289-98.893v-197.787l-171.289-98.894-66.979 38.67c-3.587 2.07-8.174.842-10.245-2.745s-.842-8.174 2.745-10.245l70.729-40.835c2.32-1.34 5.18-1.34 7.5 0l178.789 103.224c2.32 1.34 3.75 3.815 3.75 6.495v206.447c0 2.68-1.43 5.155-3.75 6.495l-178.789 103.224c-1.16.67-2.455 1.005-3.75 1.005z\"/></g></g></svg>\r\n        </div>  \r\n        <h1>Rafflerizer</h1>\r\n      </div>\r\n      <input\r\n        id=\"plcInput\"\r\n        type=\"text\"\r\n        onChange={handleChange}\r\n        onKeyDown={handleKeyDown}\r\n      />\r\n      <button className=\"add-btn\" onClick={handleClick}>\r\n        Add\r\n      </button>\r\n\r\n      <div className=\"plc-container\">{loadPlc}</div>\r\n\r\n      <button className=\"draw-btn\" onClick={handleDraw}>\r\n        Draw\r\n      </button>\r\n\r\n      <h3>The result is:</h3>\r\n      <h2>{sortRslt.sortRslt}</h2>\r\n\r\n      <button className=\"restart-btn\" type=\"text\" onClick={handleReload}>\r\n        Restart\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SortFunc;","import React from 'react';\nimport './App.css';\nimport SortFunction from './components/SortFunction';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SortFunction></SortFunction>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}